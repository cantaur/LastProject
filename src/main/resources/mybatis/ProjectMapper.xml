<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.pium.mapper.ProjectMapper">

    <!--로그인한 유저가 참여중인 프로젝트 리스트-->
    <select id="myProject" resultType="ProjectDTO" parameterType="long">
        select * from project where project_seq in(SELECT project_seq FROM project_member where member_seq = #{member_seq})
    </select>
    
    <!--로그인한 유저가 참여중인 프로젝트 리스트+프로젝트 멤버 타입 join 결과-->
    <select id="myProjectJoin" resultType="ProjectDTO" parameterType="long">
        SELECT DISTINCT p.*,pm.projmember_type,pm.member_seq
        FROM project p
                 join  project_member pm
                       ON p.member_seq=pm.member_seq
                           AND pm.project_seq =p.project_seq
        WHERE  pm.member_seq=#{member_seq}
    </select>
    
    

    <!--프로젝트 생성-->
    <insert id="insertProject" parameterType="ProjectDTO">
        INSERT INTO project (project_title, project_content, project_startdate, project_duedate, member_seq)
        VALUES(#{project_title},#{project_content},#{project_startdate},#{project_duedate},#{member_seq})
    </insert>

<!-- 프로젝트 생성 시 프로젝트 멤버 테이블에 관리자셋팅-->

    <insert id="insertManager" parameterType="long">
        INSERT INTO project_member (projmember_type, project_seq, member_seq)
        VALUES("0",#{project_seq},#{member_seq})

    </insert>

<!--  마지막으로 입력된 프로젝트 seq 검색-->
    <select id="findSeq" resultType="long">
        select last_insert_id();

    </select>










    <!--프로젝트 전체 검색-->
    <select id="projectSelectAll" resultType="ProjectDTO">
        SELECT * FROM project
    </select>
    <!--진행상태 프로젝트 검색-->
    <select id="projectSelectProceeding" resultType="ProjectDTO">
        SELECT * FROM project where project_status = "0"
    </select>
    <!--종료상태 프로젝트 검색-->
    <select id="projectSelectEnd" resultType="ProjectDTO">
        SELECT * FROM project where project_status = "1"
    </select>


    <!--프로젝트 상태 업데이트-->
    <update id="updateStatus" parameterType="ProjectDTO">
        UPDATE project
        SET project_status = #{project_status}
        WHERE project_seq = #{project_seq}
    </update>
    <!--프로젝트 삭제상태 업데이트-->
    <update id="updateIsdelete" parameterType="ProjectDTO">
        UPDATE project
        SET project_isdelete = #{project_isdelete}
        WHERE project_seq = #{project_seq}
    </update>
    <!--프로젝트 제목 업데이트-->
    <update id="updateTitle" parameterType="ProjectDTO">
        UPDATE project
        SET project_title = #{project_title}
        WHERE project_seq = #{project_seq}
    </update>
    <!--프로젝트 내용 업데이트-->
    <update id="updateContent" parameterType="ProjectDTO">
        UPDATE project
        SET project_content = #{project_content}
        WHERE project_seq = #{project_seq}
    </update>
    <!--프로젝트 전체 업데이트(enddate제외)-->
    <update id="updateProject" parameterType="ProjectDTO">
        UPDATE project
        SET project_title = #{project_title},
            project_content = #{project_content},
            project_status = #{project_status},
            project_isdelete = #{project_isdelete},
            project_startdate = #{project_startdate},
            project_duedate = #{project_duedate}
        WHERE project_seq = #{project_seq}
    </update>
    <!--프로젝트 실제종료일 업데이트-->
    <update id="updateEnddate" parameterType="ProjectDTO">
        UPDATE project
        SET project_enddate = now()
        WHERE project_seq = #{project_seq}
    </update>




</mapper>